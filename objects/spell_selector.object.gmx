<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_wallmask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>selector_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_insert(player.messages,0,"Press [S] to cast!")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>upKey = player.upKey
downKey = player.downKey
leftKey = player.leftKey
rightKey = player.rightKey
diagRightUp = keyboard_check_pressed(vk_numpad9)
diagRightDown = keyboard_check_pressed(vk_numpad3)
diagLeftUp = keyboard_check_pressed(vk_numpad7)
diagLeftDown = keyboard_check_pressed(vk_numpad1)
castKey = keyboard_check_pressed(ord("S")) or gamepad_button_check_pressed(0, gp_shoulderl)

if(upKey and (player.y-y &lt; 160)) y -= 32
if(downKey and (y-player.y &lt; 160)) y += 32
if(rightKey and (x-player.x &lt; 288)) x += 32
if(leftKey and (player.x-x &lt; 288)) x -= 32

if(diagRightUp and ((x-player.x &lt; 288) and (player.y-y &lt; 160)))
{
    x += 32
    y -= 32
}

if(diagLeftUp and ((player.x-x &lt; 288) and (player.y-y &lt; 160)))
{
    x -= 32
    y -= 32
}

if(diagLeftDown and ((player.x-x &lt; 288) and (y-player.y &lt; 160)))
{
    x -= 32
    y += 32
}

if(diagRightDown and ((x-player.x &lt; 288) and (y-player.y &lt; 160)))
{
    x += 32
    y += 32
}

if(castKey)
{
    if(player.weapon = item.hollow_wand)
    {
        heal_chance = irandom(100)
        if(heal_chance &lt; 15)
        {
            heal_val = round(player.max_hp*0.15)
            ds_list_insert(player.messages, 0, "The Hollow Wand heals you for " + string(heal_val) + " HP!")
            with(instance_create(player.x,player.y-32, hurt_text))
            {
                val = other.heal_val
                color = c_olive   
            }
        }
    }
    if(player.weapon = item.yggdrastave or player.astral_set)
    {
        no_cost_chance = irandom(100)
        if(no_cost_chance &lt; 15)
        {
            if(player.weapon = item.yggdrastave) ds_list_insert(player.messages, 0, "The Yggdrastave glows! This spell costed no energy!")
            else if(player.astral_set) ds_list_insert(player.messages, 0, "The stars align! This spell costed no energy!")
        }
        else player.energy -= global.spell_index[# sid, spell_stat.energy_cost]
    }
    if(place_meeting(x,y,floor_tile))
    {
        with(instance_create(player.x,player.y,global.spell_index[# sid, spell_stat.object]))
        {
            targetX = other.x
            targetY = other.y
        }
        instance_create(x,y,target)
        instance_destroy()
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white)
draw_rectangle(x-16,y-16,x+15,y+16,true)

//draw_text(x,y,string(x-player.x) + ", " + string(player.x-x) + "#"+string(y-player.y) + ", " + string(player.y-y))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
