<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>visible_object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
randomize()
dropped = false
pool_name = "Dropped/Spawned"

life = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>life++
if(life = 1)
{
    if(!dropped)
    {
        pool_percent = irandom(99)+1
        if(pool_percent &lt; 70) 
        {   
            if(player.floors &lt; 6) pool = global.universal_pool
            else if(player.floors &lt; 11) 
            {
                pool = choose(global.universal_pool, global.universal_pool, global.universal_pool, global.mid_pool)
            }
            else if(player.floors &lt; 16)
            {
                pool = choose(global.universal_pool, global.universal_pool, global.mid_pool, global.mid_pool)   
            }
            else if(player.floors &lt; 21)
            {
                pool = choose(global.universal_pool, global.mid_pool, global.mid_pool, global.late_pool)
            }
            else pool = global.universal_pool
        }
        else if(pool_percent &lt; 90) 
        {
            pool = global.meal_pool
        }
        else if(pool_percent &lt; 94) pool = choose(global.weapon_pool, global.armor_pool)
        else if(pool_percent &lt; 97) pool = global.potion_pool
        else if(pool_percent &lt; 99) pool = global.tome_pool
        else pool = global.pools[irandom(array_length_1d(global.pools)-1)]
        
        pool_size = (array_length_1d(pool)-1)
        iid = pool[irandom(pool_size)]
        sprite_index = global.item_index[# iid, item_stat.sprite]
        name = global.item_index[# iid, item_stat.name]
    
        if(pool = global.universal_pool) pool_name = "Universal"
        if(pool = global.mid_pool) pool_name = "Mid"
        if(pool = global.late_pool) pool_name = "Late"
        if(pool = global.potion_pool) pool_name = "Potion"
        if(pool = global.tome_pool) pool_name = "Tome"
        if(pool = global.weapon_pool) pool_name = "Weapon"
        if(pool = global.armor_pool) pool_name = "Armor"
        if(pool = global.meal_pool) pool_name = "Meal"
        
    }
    else
    {
        sprite_index = global.item_index[# iid, item_stat.sprite]
        name = global.item_index[# iid, item_stat.name]
    }
}

if(life &gt;= 1)
{  
    tier = global.item_index[# iid, item_stat.tier]
    if(point_distance(x,y,player.x,player.y) &lt;= (player.fov) and !collision_line(x,y,player.x,player.y,wall,true,true) and tier != 0 and global.loot_particles)
    {
        for(i = 0; i &lt; irandom(4) + 3; i++)
        {
            x_pos = x+irandom(16)*choose(1,-1)
            y_pos = y+8
            
            x_dist = abs(x - abs(x_pos))
            
            if(x_dist &gt;= 4 and x_dist &lt; 8) y_pos -= 3
            else if(x_dist &gt;= 8 and x_dist &lt; 12) y_pos -= 8
            else if(x_dist &gt;= 12 and x_dist &lt; 16) y_pos -= 15
            else if(x_dist &gt;= 16) y_pos -= 24
            
            with(instance_create(x_pos, y_pos, loot_particle))
            {
                x = other.x_pos
                y = other.y_pos
                x_dist = other.x_dist
                center_y = other.y+8
                color = controller.tier[global.item_index[# other.iid, item_stat.tier]]
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if(point_distance(x,y,player.x,player.y) &lt;= player.fov and !collision_line(x,y,player.x,player.y,wall,1,true)) 
{
    image_blend = c_white//controller.tier[i_tier]
    //draw_line(x,y,player.x,player.y)
}

if(life &gt; 1) draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
