<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>interactable</parentName>
  <maskName>s_charmask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()
event_inherited()

alive_time = 0

money_taken = 0
boss = false
immobile = false
slow_time = 0
show_hp = false
is_enemy = true

elite = irandom(99) + 1
elite_spawn_chance = (floor(player.floors/5) * 2)

is_elite = false

color_mod = c_white
regen = false
thievery = false
vengeful = false

scale_coeff = -1

miniboss = irandom(99) + 1

universal = irandom(99) + 1

if(instance_exists(player))
{
    if(player.floors &lt; 6) 
    {
        pool = global.foyer_pool
    }
    else if(player.floors &lt; 11)
    {
        pool = global.mines_pool
    }
    else if(player.floors &lt; 16)
    {
        pool = global.graveyard_pool
    }
    else if(player.floors &lt; 21)
    {
        pool = global.barracks_pool
    }
    else pool = global.universal_enemies
}
if(universal &lt; 20) pool = global.universal_enemies

if(pool != global.punching_pool)
{
    pool_size = array_length_1d(pool)-1
     
    en_chosen = irandom(pool_size)
}

if(miniboss &lt; 3)
{
    if(player.floors &lt; 6) eid = enemy.wight_knight
    else if(player.floors &lt; 11) eid = enemy.rock_golem
    else if(player.floors &lt; 16) eid = enemy.vampire
    else if(player.floors &lt; 21) eid = enemy.commander
    else eid = enemy.stain
}
else eid = pool[en_chosen]

spawn_enemy(x,y,eid)

if(pool = global.universal_enemies)
{
    scale_coeff = floor(player.floors/5)
    mHp = round(mHp*(1+(1.1*scale_coeff)))
    hp = mHp
    cut = round(cut*(1+(0.80*scale_coeff)))
    pierce = round(pierce*(1+(0.80*scale_coeff)))
    blunt = round(blunt*(1+(0.80*scale_coeff)))
    magic = round(magic*(1+(0.80*scale_coeff)))
    drop_rate = round(drop_rate*(1+(0.15*scale_coeff)))
    xp = round(xp*(1+(0.7*scale_coeff)))
}

if(list_contains(player.perks_gained, perk.champion)) elite_spawn_chance += 10

if(elite &lt; (11+(elite_spawn_chance)) and !boss)
{
    is_elite = true
    elite_type = irandom(4)
    
    if(elite_type != 3) mHp = round(mHp * 2)
    hp = mHp
    
    xp = round(xp * 2)
    drop_rate += 7
    
    //Extra increased health
    if(elite_type = 0)
    {
        name = "Hearty " + string(name)
        mHp = round(mHp * 2)
        color_mod = c_red
        hp = mHp
    }
    //Health regen
    if(elite_type = 1)
    {
        name = "Nurtured " + string(name)
        regen = true
        color_mod = c_lime
    }
    //Double damage
    if(elite_type = 2)
    {
        name = "Aggressive " + string(name) 
        color_mod = c_dkgray
        cut *= 2
        blunt *= 2
        pierce *= 2
        magic *= 2
    }
    //Thief
    if(elite_type = 3)
    {
        name = "Greedy " + string(name)
        color_mod = c_yellow
        thievery = true
    }
    //Revenge dmg
    if(elite_type = 4)
    {
        name = "Vengeful " + string(name)
        color_mod = c_fuchsia
        vengeful = true
    }
}

image_speed = 2/room_speed

ts = sprite_width

x = x
y = y
x1 = 0
y1 = 0
reassign_path = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

if(alive_time &lt; 10) alive_time++

if(hp &lt;= 0) 
{
    xp_bonus = round(player.wisdom/20)
    total_xp = round(xp + (xp_bonus))
    if(player.rested_time &gt; 0) total_xp = round(total_xp*1.5)
    if(player.weapon = item.starcutter)
    {
        extra_xp_chance = irandom(100)
        if(extra_xp_chance &lt; 10)
        {
            ds_list_insert(player.messages, 0, "Starcutter gains you extra XP!")
            total_xp *= 2
        }
    }
    if(player.weapon = item.lifedrinker) player.max_hp++
    if(player.weapon = item.gotterdammerung) 
    {
        stat_up = choose("Dex","Per","Str","Wis")
        if(stat_up = "Dex") player.dexterity++
        if(stat_up = "Per") player.perception++
        if(stat_up = "Str") player.strength++
        if(stat_up = "Wis") player.wisdom++
        ds_list_insert(player.messages, 0, "The power of Gotterdammerung increases your " + string(stat_up) + "!")
    }
    if(player.lvl &lt; player.max_level) player.xp += total_xp
    ds_list_insert(player.messages, 0, string(name) + " dies.")
    player.kills++
    if(money_taken &gt; 0)
    {
        with(instance_create(x,y,gold)) value = round(other.money_taken*0.7)
    }
    drop_chance = irandom(99)+1
    if(drop_chance &lt; 15) 
    {
        pickup = choose(gold, ammunition)
        instance_create(x,y,pickup)
    }
    else if(drop_chance &lt; drop_rate)
    {
        if(unique_drop = item.none) instance_create(x,y,item_parent)  
        else
        {
            unique_chance = irandom(99)+1
            if(unique_chance &lt; 75) spawn_item(unique_drop)
            else instance_create(x,y,item_parent)
        } 
    }
    if(boss) 
    {
        for(i = 0; i &lt; instance_number(floor_tile); i++)
        {
            potential_stair = instance_find(floor_tile, i)
            if(point_distance(potential_stair.x,potential_stair.y,x,y) &lt;= 32)
            {
                if(player.floors != 20) instance_create(potential_stair.x,potential_stair.y,stairs)
                else instance_create(potential_stair.x,potential_stair.y,town_checkpoint)
                break
            }
        }
        if(player.job = class.slayer)
        {
            ds_list_insert(player.messages,0,"The " + string(name) + "'s soul empowers your Slayer Sword!")
            if(player.floors = 5 and player.weapon = item.slayer_sword)
            {
                player.weapon = item.slayer_sword_lv2
                ds_list_replace(player.equipped, 0, item.slayer_sword_lv2)
            }
            if(player.floors = 10 and player.weapon = item.slayer_sword_lv2)
            {
                player.weapon = item.slayer_sword_lv3
                ds_list_replace(player.equipped, 0, item.slayer_sword_lv3)
            }
            if(player.floors = 15 and player.weapon = item.slayer_sword_lv3)
            {
                player.weapon = item.slayer_sword_lv4
                ds_list_replace(player.equipped, 0, item.slayer_sword_lv4)
            }
            if(player.floors = 20 and player.weapon = item.slayer_sword_lv4)
            {
                player.weapon = item.slayer_sword_lv5
                ds_list_replace(player.equipped, 0, item.slayer_sword_lv5)
            }
        }
    }
    if(irandom(100) &lt; 30) instance_create(x,y,corpse)
    instance_destroy()
}

//if(place_meeting(x,y,wall)) instance_destroy()

if(eid != enemy.punching_bag and reassign_path) 
{

    path = mp_grid_path(global.grid, path,x,y,player.x,player.y,1)
}

ts = sprite_width
x1 = path_get_point_x(path, 1)
y1 = path_get_point_y(path, 1)


if(alive_time = 1)
{
    if(eid = enemy.crystal_demon)
    {
        demonite_pop = irandom(6) + 14
        for(i = 0; i &lt; demonite_pop; i++)
        {
            fs = instance_find(floor_tile, irandom(instance_number(floor_tile)-1))
            with(instance_create(fs.x,fs.y, enemy_parent))
            {
                spawn_enemy(x, y, enemy.demonite)
            }
        }   
    }
}

if(place_meeting(x,y,wall) or place_meeting(x,y,player))
{
    x = xprevious
    y = yprevious
}

if(place_meeting(x,y,enemy_parent))
{
    if(instance_place(x,y,enemy_parent).id &lt; self.id)
    {
        x = xprevious
        y = yprevious
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if(!instance_exists(dungeon_carver)) image_speed = 2/room_speed
if((point_distance(x,y,player.x,player.y) &lt; (player.fov+16) and !collision_line(self.x,self.y,player.x,player.y,wall,true,true)) or always_visible) 
{
    sprite_index = global.enemy_index[# eid, enemy_stat.sprite]
    if((place_meeting(x,y-32,enemy_parent) and instance_place(x,y-32,enemy_parent).id != self.id) or place_meeting(x,y-32,player))
    {
        depth = -(100000 + y) 
    }
    else depth = -3
    if(global.show_hp_bars and hp &lt; mHp)
    {
        draw_sprite(s_en_barback, 0, x-16,y-32)
        draw_sprite_ext(s_en_bar,0,x-16,y-32,(hp/mHp),1,0,c_red,1)
        draw_sprite(s_en_barfront,0,x-16,y-32)
        if(is_elite and global.show_elite_names) 
        {
            draw_set_font(elite_font)
            draw_set_color(c_white)
            draw_set_halign(fa_center)
            if(elite_type = 0) el_name = "Hearty"
            if(elite_type = 1) el_name = "Regen"
            if(elite_type = 2) el_name = "2x Dmg"
            if(elite_type = 3) el_name = "Greedy"
            if(elite_type = 4) el_name = "Revenge"
            text_outline(x,y-40, el_name, c_white)
            draw_set_halign(fa_left)
            draw_set_font(hud_font)
        }
    }
    draw_self()
}
else 
{
    if(point_distance(x,y,player.x,player.y) &lt; (player.fov+64))
    {
        depth = -3
        sprite_index = global.enemy_index[# eid, enemy_stat.sprite]
        image_blend = c_black
        draw_self()   
    }
    else
    {
        image_blend = c_black
        depth = 9
    }
}

//Dev drawing
if(eid != enemy.punching_bag)
{
    //draw_text(x,y-32,depth)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
