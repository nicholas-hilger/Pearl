<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>menu_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>index = 0
if(ds_list_size(player.perks_list) &gt;= 3) size = 3
else if(ds_list_size(player.perks_list) &gt; 0 and ds_list_size(player.perks_list) &lt; 3) size = ds_list_size(player.perks_list)
else if(ds_list_size(player.perks_list) = 0) instance_destroy()

if(ds_list_size(player.perks_list) &gt; 0)
{
    perk_choices = ds_list_create()
    ds_list_clear(perk_choices)
    
    for(i = 0; i &lt; size; i++)
    {
        added_perk = ds_list_find_value(player.perks_list, 0)
        ds_list_add(perk_choices, added_perk)
        ds_list_delete(player.perks_list,0)
    }
    
    inventory_name = "Perk Time!"
}

player.perk_page = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>upKey = player.upKey
downKey = player.downKey
leftKey = player.leftKey
rightKey = player.rightKey
useKey = keyboard_check_pressed(vk_enter) or gamepad_button_check_pressed(0, gp_face1)

current_perk = ds_list_find_value(perk_choices, index)

if(ds_list_size(perk_choices) &gt; 0 and !console.vis)
{ 
    if(upKey)
    {
        if(index = 0) index = ds_list_size(perk_choices)-1
        else index--
    }
    
    if(downKey)
    {
        if(index = ds_list_size(perk_choices)-1) index = 0
        else index++
    }
    
    if(rightKey)
    {
        if(player.perk_page &lt; player.max_perk_page) player.perk_page++
        else player.perk_page = 0  
    }
    if(leftKey)
    {
        if(player.perk_page &gt; 0) player.perk_page--
        else player.perk_page = player.max_perk_page
    }
    
    if(useKey)
    {
        ds_list_add(player.perks_gained, current_perk)
        check_perks(current_perk)
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black)
draw_rectangle(8,175,308,220 + (24*ds_list_size(perk_choices)),false)
draw_rectangle(309, 175, 1300, 350, false)  

draw_set_color(c_white)
draw_rectangle(7,174,309,220 + (24*ds_list_size(perk_choices))+1,true)
draw_rectangle(308,174,1299, 349, true)

draw_rectangle(10,215 + (24*index),306, 240 + (24*index),true)  

draw_set_halign(fa_left)

draw_set_font(hud_font)

draw_text(12,180, inventory_name)

current_perk = ds_list_find_value(perk_choices, index)
for(i = 0; i &lt; ds_list_size(perk_choices); i++)
{
    draw_set_color(c_white)
    draw_text(12, 220 + (24*i), global.perk_index[# ds_list_find_value(perk_choices, i), perk_stats.name])
    draw_set_color(c_white)
}

draw_text_ext(313,188, global.perk_index[# ds_list_find_value(perk_choices,index), perk_stats.description], 24, 730)

// current perks
draw_set_color(c_black)
draw_rectangle(1052, 175, 1910, 1075, false)
draw_set_color(c_white)
draw_rectangle(1051,174,1909, 1074, true)
draw_set_halign(fa_center)
draw_set_halign(fa_left)


draw_set_halign(fa_center)
if(player.max_perk_page = 0) draw_text(1480, 180, "Current Perks")
else
{
    if(player.perk_page = 0) draw_text(1480, 180, "  Current Perks (" + string(player.perk_page+1) + ") &gt;")
    else if(player.perk_page &gt; 0 and player.perk_page &lt; player.max_perk_page) draw_text(1480, 180, "&lt; Current Perks (" + string(player.perk_page+1) + ") &gt;")
    else draw_text(1480, 180, "&lt; Current Perks (" + string(player.perk_page+1) + ")  ")
}
draw_set_halign(fa_left)
if(player.perk_page != player.max_perk_page)
{
    for(i = (0+(10*player.perk_page)); i &lt; (10*(player.perk_page+1)); i++)
    {
        perk_name = global.perk_index[# ds_list_find_value(player.perks_gained, i), perk_stats.name]
        perk_desc = global.perk_index[# ds_list_find_value(player.perks_gained, i), perk_stats.short_description]
        draw_text_ext(1053, 228+((i%10)*88), "* " + string(perk_name) + ": " + string(perk_desc), 24, 850)
    }
}
else
{
    perks_shown = ds_list_size(player.perks_gained)%10
    for(i = 0+(10*player.perk_page); i &lt; ((10*player.perk_page)+perks_shown); i++)
    {
        perk_name = global.perk_index[# ds_list_find_value(player.perks_gained, i), perk_stats.name]
        perk_desc = global.perk_index[# ds_list_find_value(player.perks_gained, i), perk_stats.short_description]
        draw_text_ext(1053, 228+((i%10)*88), "* " + string(perk_name) + ": " + string(perk_desc), 24, 850)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
